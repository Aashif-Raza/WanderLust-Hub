<% layout('/layouts/boilerplate') -%>

<style>
  /* === Base Container === */
  .filter-container {
    position: relative;
    margin-top: 1rem;
    padding: 0 1rem;
  }

  /* === Top Row: Filters + Tax Toggle === */
  .filter-top-row {
    display: flex;
    align-items: center;
    gap: 1rem;
    overflow: hidden;
  }

  /* === Filters Scroll Area === */
  #filters {
    display: flex;
    align-items: center;
    overflow-x: auto;
    white-space: nowrap;
    scroll-behavior: smooth;
    scrollbar-width: none;
    flex: 1;
  }
  #filters::-webkit-scrollbar {
    display: none;
  }

  .filter {
    text-align: center;
    margin-right: 2rem;
    opacity: 0.7;
    flex: 0 0 auto;
    transition: all 0.2s ease-in-out;
  }
  .filter:hover {
    opacity: 1;
    cursor: pointer;
  }
  .filter p {
    font-size: 0.8rem;
  }
  .filter.active {
    border-bottom: 2px solid #ff385c;
    color: #ff385c;
    transform: scale(1.05);
  }

  /* === Tax Toggle === */
  .tax-toggle {
    border: 1px solid black;
    border-radius: 1rem;
    height: 3rem;
    padding: 0.6rem 1rem;
    display: flex;
    align-items: center;
    background: white;
    white-space: nowrap;
    flex-shrink: 0;
  }
  .toggle {
    cursor: pointer;
  }

  /* === Scroll Buttons === */
  .scroll-btn {
    background: white;
    border: 1px solid #ddd;
    font-size: 1.4rem;
    padding: 0.4rem 0.7rem;
    border-radius: 50%;
    cursor: pointer;
    transition: 0.3s;
    z-index: 5;
    display: none; /* visible on smaller screens */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);
  }
  .scroll-btn:hover {
    background: #ff385c;
    color: white;
    border-color: #ff385c;
  }
  .scroll-left {
    margin-right: 0.3rem;
  }
  .scroll-right {
    margin-left: 0.3rem;
  }

  /* === Gradient Fades === */
  .fade-left,
  .fade-right {
    position: absolute;
    top: 0;
    width: 40px;
    height: 100%;
    pointer-events: none;
    z-index: 4;
  }
  .fade-left {
    left: 0;
    background: linear-gradient(to right, white 10%, transparent);
  }
  .fade-right {
    right: 0;
    background: linear-gradient(to left, white 30%, transparent);
  }

  /* === RESPONSIVE === */

  /* Tablets & below */
  @media (max-width: 992px) {
    .scroll-btn {
      display: block;
    }
    .filter p {
      font-size: 0.75rem;
    }
    .filter {
      margin-right: 1.2rem;
    }
    .filter-top-row {
      flex-wrap: wrap;
    }
    .tax-toggle {
      order: 3;
      width: 100%;
      justify-content: center;
      margin-top: 0.5rem;
    }
  }

  /* Mobile Devices */
  @media (max-width: 576px) {
    .filter p {
      font-size: 0.7rem;
    }
    .filter i {
      font-size: 1rem;
    }
    /* Keep scroll buttons inline with filters on mobile */
    .scroll-btn {
      position: static;
      display: inline-block;
      margin: 0 0.3rem;
      font-size: 1.2rem;
      padding: 0.3rem 0.6rem;
    }

    .scroll-left {
      order: 0;
    }
    .scroll-right {
      order: 2;
    }

    /* Ensure filters stay scrollable between them */
    #filters {
      flex: 1;
      display: flex;
      overflow-x: auto;
      scroll-behavior: smooth;
      white-space: nowrap;
    }

    /* Keep everything in one line */
    .filter-top-row {
      display: flex;
      align-items: center;
      justify-content: space-between;
      gap: 0.3rem;
    }
  }

  .tax-info {
    display: none;
  }
</style>

<div class="filter-container">
  <!-- Scrollable filters with buttons + tax toggle -->
  <div class="filter-top-row">
    <button id="scrollLeft" class="scroll-btn scroll-left">&lt;</button>

    <div id="filters">
      <div class="filter" data-category="Trending">
        <div><i class="fa-solid fa-fire"></i></div>
        <p>Trending</p>
      </div>
      <div class="filter" data-category="Room">
        <div><i class="fa-solid fa-bed"></i></div>
        <p>Room</p>
      </div>
      <div class="filter" data-category="Iconic Cities">
        <div><i class="fa-solid fa-mountain-city"></i></div>
        <p>Iconic Cities</p>
      </div>
      <div class="filter" data-category="Mountains">
        <div><i class="fa-solid fa-mountain"></i></div>
        <p>Mountains</p>
      </div>
      <div class="filter" data-category="Castles">
        <div><i class="fa-brands fa-fort-awesome"></i></div>
        <p>Castles</p>
      </div>
      <div class="filter" data-category="Amazing Pools">
        <div><i class="fa-solid fa-person-swimming"></i></div>
        <p>Amazing Pools</p>
      </div>
      <div class="filter" data-category="Camping">
        <div><i class="fa-solid fa-campground"></i></div>
        <p>Camping</p>
      </div>
      <div class="filter" data-category="Farms">
        <div><i class="fa-solid fa-cow"></i></div>
        <p>Farms</p>
      </div>
      <div class="filter" data-category="Artic">
        <div><i class="fa-regular fa-snowflake"></i></div>
        <p>Artic</p>
      </div>
      <div class="filter" data-category="Domes">
        <div><i class="fa-solid fa-igloo"></i></div>
        <p>Domes</p>
      </div>
      <div class="filter" data-category="Boats">
        <div><i class="fa-solid fa-ship"></i></div>
        <p>Boats</p>
      </div>
      <div class="filter" data-category="Beach">
        <div><i class="fa-solid fa-umbrella-beach"></i></div>
        <p>Beach</p>
      </div>
    </div>

    <button id="scrollRight" class="scroll-btn scroll-right">&gt;</button>

    <!-- Tax toggle -->
    <div class="tax-toggle">
      <div class="form-check form-switch">
        <label class="form-check-label toggle" for="flexSwitchCheckDefault"
          >Display total after taxes</label
        >
        <input
          class="form-check-input toggle"
          type="checkbox"
          id="flexSwitchCheckDefault"
        />
      </div>
    </div>
  </div>

  <!-- Gradient fade edges -->
  <div class="fade-left"></div>
  <div class="fade-right"></div>
</div>

<% if (typeof searchQuery !== "undefined" && searchQuery.trim() !== "") { %>
<h5 class="mt-3">Showing results for "<%= searchQuery %>"</h5>
<% } %>

<div
  id="listings-container"
  class="row row-cols-lg-3 row-cols-md-2 row-cols-sm-1 mt-3"
>
  <% for(listing of allListings){ %>
  <a href="/listings/<%= listing._id %>" class="listing-link">
    <div class="card listing-card">
      <img
        src="<%=listing.image.url%>"
        class="card-img-top"
        style="height: 20rem"
      />
      <div class="card-img-overlay"></div>
      <div class="card-body">
        <p class="card-text">
          <b><%=listing.title%></b><br />
          &#8377;<%= listing.price.toLocaleString("en-IN") %> / Night
          <i id="tax-info" class="tax-info">&nbsp; &nbsp;+18% GST</i>
        </p>
      </div>
    </div>
  </a>
  <% } %>
</div>

<script>
  const filtersContainer = document.getElementById("filters");
  const scrollLeftBtn = document.getElementById("scrollLeft");
  const scrollRightBtn = document.getElementById("scrollRight");

  // Scroll control
  scrollLeftBtn.addEventListener("click", () => {
    filtersContainer.scrollBy({ left: -200, behavior: "smooth" });
  });
  scrollRightBtn.addEventListener("click", () => {
    filtersContainer.scrollBy({ left: 200, behavior: "smooth" });
  });

  // Toggle scroll buttons
  function toggleScrollButtons() {
    if (filtersContainer.scrollWidth <= filtersContainer.clientWidth) {
      scrollLeftBtn.style.display = "none";
      scrollRightBtn.style.display = "none";
    } else {
      scrollLeftBtn.style.display = "block";
      scrollRightBtn.style.display = "block";
    }
    updateButtonFade();
  }

  // Fade button effect
  function updateButtonFade() {
    const scrollLeft = filtersContainer.scrollLeft;
    const maxScrollLeft =
      filtersContainer.scrollWidth - filtersContainer.clientWidth;

    scrollLeftBtn.style.opacity = scrollLeft <= 10 ? "0.3" : "1";
    scrollRightBtn.style.opacity =
      scrollLeft >= maxScrollLeft - 10 ? "0.3" : "1";
  }

  filtersContainer.addEventListener("scroll", updateButtonFade);
  window.addEventListener("resize", toggleScrollButtons);
  window.addEventListener("load", toggleScrollButtons);

  let taxSwitch = document.getElementById("flexSwitchCheckDefault");
  taxSwitch.addEventListener("click", () => {
    let taxInfo = document.getElementsByClassName("tax-info");
    for (info of taxInfo) {
      if (info.style.display != "inline") {
        info.style.display = "inline";
      } else {
        info.style.display = "none";
      }
    }
  });

  // Category filters
  const filters = document.querySelectorAll(".filter");
  const listingsContainer = document.querySelector("#listings-container");

  filters.forEach((filter) => {
    filter.addEventListener("click", async () => {
      const category = filter.dataset.category;

      // Highlight selected filter
      filters.forEach((f) => f.classList.remove("active"));
      filter.classList.add("active");

      try {
        const res = await fetch(`/listings/api/category/${category}`);
        const listings = await res.json();

        listingsContainer.innerHTML = "";

        if (listings.length === 0) {
          listingsContainer.innerHTML = `
            <div class="col-12 text-center text-muted mt-4">
              No listings found in <b>${category}</b> category.
            </div>`;
          return;
        }

       listings.forEach((listing) => {
        const cardHTML = `
          <div class="col-lg-4 col-md-6 col-sm-12 mt-3">
            <a href="/listings/${listing._id}" class="listing-link text-decoration-none">
              <div class="card listing-card border-0">
                <img
                  src="${listing.image.url}"
                  class="card-img-top"
                  style="height: 20rem; object-fit: cover;"
                  alt="${listing.title}"
                />
                <div class="card-body">
                  <p class="card-text mb-0">
                    <b>${listing.title}</b><br />
                    &#8377;${listing.price.toLocaleString("en-IN")} / Night
                    <i class="tax-info text-muted">&nbsp;&nbsp;+18% GST</i>
                  </p>
                </div>
              </div>
            </a>
          </div>`;
        listingsContainer.insertAdjacentHTML("beforeend", cardHTML);
      });

      } catch (err) {
        console.error("Error fetching listings:", err);
      }
    });
  });

</script>
